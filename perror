#!/usr/bin/env python3

import optparse
import logging
import errno
import sys
import re
import os

_logger = logging.getLogger(__name__)

def main():
    parser = optparse.OptionParser("usage %prog [errno]")
    parser.description = "Lookup errno values or strings"
    parser.add_option("-s","--search",metavar="regex")
    parser.add_option("--debug",action="count",default=0)
    opts,args = parser.parse_args()

    logging.basicConfig( level=logging.INFO )
    if opts.debug:
        _logger.setLevel(logging.DEBUG)
        _logger.debug("debug level {0}".format(opts.debug))
        if opts.debug > 1:
            logging.getLogger("").setLevel(logging.DEBUG)

    try:
        vals = [int(x) for x in args]
    except ValueError as e:
        _logger.error("{}".format(e))
        sys.exit(1)

    if opts.search:
        for err,name in sorted(errno.errorcode.items()):
            if opts.search in name:
                vals.append(err)

    for v in sorted(vals):
        key = errno.errorcode.get(v,"N/A")
        text = os.strerror(v)
        _logger.debug("key: '{0}'".format(key))
        print("{0:3d} {1} - {2}".format(v,key,text))

if __name__ == "__main__":
    main()
