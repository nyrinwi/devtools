#!/usr/bin/python

from __future__ import print_function
import optparse
import logging
import errno
import re
import os

_logger = logging.getLogger(__name__)

def main():
    parser = optparse.OptionParser("usage %prog [errno]")
    parser.add_option("-s","--search",metavar="regex")
    parser.add_option("--debug",action="count",default=0)
    opts,args = parser.parse_args()

    logging.basicConfig( level=logging.INFO )
    if opts.debug:
        _logger.setLevel(logging.DEBUG)
        _logger.debug("debug level {0}".format(opts.debug))
        if opts.debug > 1:
            logging.getLogger("").setLevel(logging.DEBUG)

    vals = [int(x) for x in args]
    if not vals:
        vals = errno.errorcode
    
    for v in vals:
        key = errno.errorcode.get(v,"N/A")
        text = os.strerror(v)
        _logger.debug("key: '{0}'".format(key))
        if not opts.search or re.search(opts.search,text) is not None:
            print("{0:3d} {1} - {2}".format(v,key,text))

if __name__ == "__main__":
    main()
