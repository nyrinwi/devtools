#!/usr/bin/python

import optparse
import logging
import os
import sys

_logger = logging.getLogger(__name__)

def waitinfo(x):
    x = int(x)
    if x == 127:
        return "{x:3}: command not found".format(**locals())
    elif x == 126:
        return "{x:3}: command not found".format(**locals())

    exited = os.WIFEXITED(x)
    exitstatus = os.WEXITSTATUS(x) if exited else 0
    signaled = os.WIFSIGNALED(x)
    termsig = os.WTERMSIG(x) if signaled else 0

    assert(exited ^ signaled)

    if exited:
        how = "exited {0}".format(exitstatus)
    else:
        how = "signaled {0}".format(termsig)

    return "{x:5}: {how}".format(**locals())

def main():
    parser = optparse.OptionParser()
    parser.add_option("-x","--execute",action="store_true",default=False)
    parser.add_option("--debug",action="count",default=0)
    opts,args = parser.parse_args()

    logging.basicConfig( level=logging.INFO )
    if opts.debug:
        _logger.setLevel(logging.DEBUG)
        _logger.debug("debug level {0}".format(opts.debug))
        if opts.debug > 1:
            logging.getLogger("").setLevel(logging.DEBUG)

    if opts.execute:
        stats = [ os.popen(" ".join(args)).close() ]
    else:
        stats = args[:]
    _logger.info("stats {0}".format(stats))

    if not stats:
        _logger.error("nothing to do")
        sys.exit(1)

    for s in stats:
        print waitinfo(s)

if __name__ == "__main__":
    main()

