#!/usr/bin/python

import optparse
import logging
import subprocess
import os
import sys

_logger = logging.getLogger(__name__)

def waitinfo(x):
    x = int(x)
    exited = os.WIFEXITED(x)
    signaled = os.WIFSIGNALED(x)
    signal = os.WTERMSIG(x) if signaled else None
    status = os.WEXITSTATUS(x) if exited else None

    print x,signaled,exited
    assert((exited and not signaled) or (signaled and not exited))

    how = "exited" if exited else "signaled"

    return "{x:3}: {how} {signal}".format(**locals())


def main():
    parser = optparse.OptionParser()
    parser.add_option("-x","--execute",action="store_true",default=False)
    parser.add_option("--debug",action="count",default=0)
    opts,args = parser.parse_args()

    logging.basicConfig( level=logging.INFO )
    if opts.debug:
        _logger.setLevel(logging.DEBUG)
        _logger.debug("debug level {0}".format(opts.debug))
        if opts.debug > 1:
            logging.getLogger("").setLevel(logging.DEBUG)

    if opts.execute:
        stats = [ subprocess.Popen(args).wait() ]
    else:
        stats = args[:]

    if not stats:
        _logger.error("nothing to do")
        sys.exit(1)

    for s in stats:
        print waitinfo(s)

if __name__ == "__main__":
    main()

